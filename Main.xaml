<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.in_Config="[New Dictionary(of String,Object)]" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:maes="clr-namespace:Microsoft.Activities.Extensions.Statements;assembly=Microsoft.Activities.Extensions" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:p="http://schemas.uipath.com/workflow/activities/document-processing-contracts/results" xmlns:p1="http://schemas.uipath.com/workflow/activities/intelligentocr" xmlns:p2="http://schemas.uipath.com/workflow/activities/intelligentocr/training" xmlns:p3="http://schemas.uipath.com/workflow/activities/document-processing-contracts/dom" xmlns:p4="http://schemas.uipath.com/workflow/activities/document-processing-contracts/taxonomy" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System" xmlns:this="clr-namespace:" xmlns:ucas="clr-namespace:UiPath.Core.Activities.Storage;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uiaam="clr-namespace:UiPath.IntelligentOCR.Activities.Actions.Model;assembly=UiPath.IntelligentOCR.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_FilePath" Type="InArgument(x:String)" />
    <x:Property Name="in_FullPathUnresolved" Type="InArgument(x:String)" />
    <x:Property Name="in_FullPathClassified" Type="InArgument(x:String)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_LogText" Type="InArgument(x:String)" />
    <x:Property Name="in_LogFilePath" Type="InArgument(x:String)" />
    <x:Property Name="in_DOMstring" Type="InArgument(x:String)" />
    <x:Property Name="in_DocText" Type="InArgument(x:String)" />
    <x:Property Name="in_AutoClassifications" Type="InArgument(p:ClassificationResult[])" />
    <x:Property Name="in_TaxonomyString" Type="InArgument(x:String)" />
    <x:Property Name="in_MailBoxes" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="in_MailFrom" Type="InArgument(x:String)" />
    <x:Property Name="in_MailDate" Type="InArgument(x:String)" />
    <x:Property Name="in_MailAddresses" Type="InArgument(x:String)" />
  </x:Members>
  <this:Main.in_LogText>
    <InArgument x:TypeArguments="x:String" />
  </this:Main.in_LogText>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>2154,1339.33333333333</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="56">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.TaxonomyManagement</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Digitization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DocumentClassification</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Training</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Classification</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Training</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>UiPath.IntelligentOCR.Activities</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Actions.Model</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>UiPath.Core.Activities.Storage</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>Microsoft.Activities.Extensions.Statements</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Vision.Core.OCR</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.IMAP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="76">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Persistence.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>Microsoft.Activities.Extensions</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices.RuntimeInformation</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap:VirtualizedContainerService.HintSize="762,1274.66666666667" sap2010:WorkflowViewState.IdRef="Flowchart_2">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Name="DocText" />
      <Variable x:TypeArguments="p3:Document" Name="DOM" />
      <Variable x:TypeArguments="p:ClassificationResult[]" Name="Classifications" />
      <Variable x:TypeArguments="p4:DocumentTaxonomy" Name="Taxonomy" />
      <Variable x:TypeArguments="p:ClassificationResult[]" Name="HumanClassifications" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Double)" Name="DocumentTypes" />
      <Variable x:TypeArguments="x:String" Name="FinalFilePath" />
      <Variable x:TypeArguments="p:ClassificationResult[]" Name="AutoClassifications" />
      <Variable x:TypeArguments="x:String" Name="FilePath" />
      <Variable x:TypeArguments="x:String" Name="TargetMailFolder" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">564,0</av:Point>
        <av:Size x:Key="ShapeSize">60,74.6666666666667</av:Size>
        <x:Double x:Key="Width">728</x:Double>
        <x:Double x:Key="Height">1238.3933333333332</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">594,74.6666666666667 594,125</av:PointCollection>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID8</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">494,244</av:Point>
          <av:Size x:Key="ShapeSize">200,69.3333333333333</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">594,313.333333333333 594,364</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Validate" sap:VirtualizedContainerService.HintSize="200,69.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_14">
        <Sequence.Variables>
          <Variable x:TypeArguments="uiaam:DocumentClassificationActionData" Name="HumanOutput" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <p1:CreateDocumentClassificationAction ActionCatalog="{x:Null}" FolderPath="{x:Null}" TimeoutMs="{x:Null}" ActionOutput="[HumanOutput]" ActionPriority="Medium" ActionTitle="[&quot;Verify: &quot; + path.GetFileName(in_FilePath)]" AutomaticClassificationResults="[in_AutoClassifications]" BucketName="InvoiceDocData" DisplayName="Create Document Classification Action" DocumentObjectModel="[DOM]" DocumentPath="[in_FilePath]" DocumentText="[in_DocText]" sap:VirtualizedContainerService.HintSize="478,380.666666666667" sap2010:WorkflowViewState.IdRef="CreateDocumentClassificationAction_2" Taxonomy="[Taxonomy]">
          <p1:CreateDocumentClassificationAction.BucketFolderPath>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String" Value="" />
            </InArgument>
          </p1:CreateDocumentClassificationAction.BucketFolderPath>
        </p1:CreateDocumentClassificationAction>
        <p1:WaitForDocumentClassificationActionAndResume ActionOutput="{x:Null}" DocumentPath="{x:Null}" DownloadFolderPath="{x:Null}" StatusMessage="{x:Null}" TimeoutMs="{x:Null}" WaitItemDataObject="{x:Null}" ActionInput="[HumanOutput]" AutomaticClassificationResults="[AutoClassifications]" DisplayName="Wait For Document Classification Action And Resume" DocumentObjectModel="[DOM]" DocumentText="[DocText]" sap:VirtualizedContainerService.HintSize="478,372" sap2010:WorkflowViewState.IdRef="WaitForDocumentClassificationActionAndResume_2" RemoveDataFromStorage="True" Taxonomy="[Taxonomy]" ValidatedClassificationResults="[HumanClassifications]" />
        <ucas:DownloadStorageFile TimeoutMS="{x:Null}" Destination="[Path.Combine(Environment.CurrentDirectory,&quot;DocumentProcessing&quot;,&quot;taxonomy.json&quot;)]" DisplayName="Download Taxonomy File" sap:VirtualizedContainerService.HintSize="478,22" sap2010:WorkflowViewState.IdRef="DownloadStorageFile_1" Path="taxonomy.json" StorageBucketName="InvoiceBucket" />
        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="478,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_21" Level="Info" Message="[&quot;Taxonomy path: &quot; + Path.Combine(Environment.CurrentDirectory,&quot;DocumentProcessing&quot;,&quot;taxonomy.json&quot;)]" />
        <p2:TrainClassifiersScope HumanValidatedData="{x:Null}" DisplayName="Train Classifiers Scope" DocumentObjectModel="[DOM]" DocumentPath="[in_FilePath]" DocumentText="[DocText]" sap:VirtualizedContainerService.HintSize="478,373.333333333333" HumanValidatedClassificationData="[HumanClassifications]" sap2010:WorkflowViewState.IdRef="TrainClassifiersScope_2" Taxonomy="[Taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI3543faa32e3a41e5bd3bea4a0ae26db4&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;Invoices.Accounting.InvoiceCZ&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;Invoices.Accounting.InvoiceCZ&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true},&quot;Invoices.Accounting.InvoiceEN&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;Invoices.Accounting.InvoiceEN&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true},&quot;Invoices.Accounting.InvoiceDE&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;Invoices.Accounting.InvoiceDE&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true},&quot;Invoices.Accounting.ProFormaCZ&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;Invoices.Accounting.ProFormaCZ&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true},&quot;Invoices.Accounting.Upominka&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;Invoices.Accounting.Upominka&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:false},&quot;Invoices.Accounting.StornoCZ&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;Invoices.Accounting.StornoCZ&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:false}}}},&quot;ClassifierMinimumConfidence&quot;:{&quot;UI3543faa32e3a41e5bd3bea4a0ae26db4&quot;:&quot;0&quot;}}">
          <p2:TrainClassifiersScope.Trainables>
            <p2:KeywordBasedClassifierTrainer LearningData="{x:Null}" DisplayName="Keyword Based Classifier Trainer" sap:VirtualizedContainerService.HintSize="234,114.666666666667" sap2010:WorkflowViewState.IdRef="KeywordBasedClassifierTrainer_3" LearningFilePath="DocumentProcessing\Classifiers.json" PersistenceId="UI3543faa32e3a41e5bd3bea4a0ae26db4">
              <p2:KeywordBasedClassifierTrainer.DocumentObjectModel>
                <InArgument x:TypeArguments="p3:Document">
                  <DelegateArgumentValue x:TypeArguments="p3:Document">
                    <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
                  </DelegateArgumentValue>
                </InArgument>
              </p2:KeywordBasedClassifierTrainer.DocumentObjectModel>
              <p2:KeywordBasedClassifierTrainer.DocumentPath>
                <InArgument x:TypeArguments="x:String">
                  <DelegateArgumentValue x:TypeArguments="x:String">
                    <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                  </DelegateArgumentValue>
                </InArgument>
              </p2:KeywordBasedClassifierTrainer.DocumentPath>
              <p2:KeywordBasedClassifierTrainer.DocumentText>
                <InArgument x:TypeArguments="x:String">
                  <DelegateArgumentValue x:TypeArguments="x:String">
                    <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                  </DelegateArgumentValue>
                </InArgument>
              </p2:KeywordBasedClassifierTrainer.DocumentText>
              <p2:KeywordBasedClassifierTrainer.HumanValidatedData>
                <InArgument x:TypeArguments="p:ExtractionResult[]">
                  <DelegateArgumentValue x:TypeArguments="p:ExtractionResult[]">
                    <DelegateInArgument x:TypeArguments="p:ExtractionResult[]" Name="HumanValidatedData" />
                  </DelegateArgumentValue>
                </InArgument>
              </p2:KeywordBasedClassifierTrainer.HumanValidatedData>
            </p2:KeywordBasedClassifierTrainer>
          </p2:TrainClassifiersScope.Trainables>
        </p2:TrainClassifiersScope>
        <Assign DisplayName="Assign Human Classification Results" sap:VirtualizedContainerService.HintSize="478,62" sap2010:WorkflowViewState.IdRef="Assign_8">
          <Assign.To>
            <OutArgument x:TypeArguments="p:ClassificationResult[]">[Classifications]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="p:ClassificationResult[]">[HumanClassifications]</InArgument>
          </Assign.Value>
        </Assign>
        <ucas:UploadStorageFile TimeoutMS="{x:Null}" Destination="Classifiers.json" DisplayName="Upload Classifiers to Storage" sap:VirtualizedContainerService.HintSize="478,22" sap2010:WorkflowViewState.IdRef="UploadStorageFile_2" Path="DocumentProcessing\Classifiers.json" StorageBucketName="InvoiceBucket" />
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">494,364</av:Point>
              <av:Size x:Key="ShapeSize">200,69.3333333333333</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">594,433.333333333333 594,483</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Process Results" sap:VirtualizedContainerService.HintSize="200,69.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_18">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If sap2010:Annotation.AnnotationText="Excludes all except Invoice Doc Type from processing here" Condition="[Not HumanClassifications.Any]" sap:VirtualizedContainerService.HintSize="940,246.666666666667" sap2010:WorkflowViewState.IdRef="If_7">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Assign DisplayName="Init New ClassificationResult Instance" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_14">
                  <Assign.To>
                    <OutArgument x:TypeArguments="p:ClassificationResult[]">[HumanClassifications]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="p:ClassificationResult[]">[{New ClassificationResult("DocTypeID","33", New ResultsDocumentBounds(1, 5))}]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
            </If>
            <If sap2010:Annotation.AnnotationText="Only Invoice classification is further processed- other types to be added later on, then the condition here will be Classifications.Any" Condition="[HumanClassifications(0).DocumentTypeId.Contains(&quot;Invoices.Accounting.Invoice&quot;) OR HumanClassifications(0).DocumentTypeId.Contains(&quot;Invoices.Accounting.ProForma&quot;)]" DisplayName="If Classified" sap:VirtualizedContainerService.HintSize="940,786" sap2010:WorkflowViewState.IdRef="If_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Save Results" sap:VirtualizedContainerService.HintSize="518,601.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_16">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ForEach x:TypeArguments="p:ClassificationResult" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="476,374.666666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[Classifications]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="p:ClassificationResult">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="p:ClassificationResult" Name="Result" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Save Results" sap:VirtualizedContainerService.HintSize="439.333333333333,236" sap2010:WorkflowViewState.IdRef="Sequence_15">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <maes:AddToDictionary x:TypeArguments="x:String, x:Double" Dictionary="[DocumentTypes]" DisplayName="Add to dictionary" sap:VirtualizedContainerService.HintSize="397.333333333333,144" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_2" Key="[Result.DocumentTypeId]" Value="[Result.Confidence]" />
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                  </ui:ForEach>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="476,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Document Type: &quot; + DocumentTypes.Keys(0) + &quot;; Confidence level: &quot; + DocumentTypes.Item(DocumentTypes.Keys(0)).ToString]" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="376,186.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_17">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Warn" Message="[&quot;No Classification Data&quot;]" />
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
          <FlowStep.Next>
            <FlowSwitch x:TypeArguments="x:String" x:Name="__ReferenceID5" DisplayName="Flow Switch" Expression="[if(Classifications.Any, &quot;Processed&quot;, &quot;Unclassified&quot;)]" sap:VirtualizedContainerService.HintSize="70,86.6666666666667" sap2010:WorkflowViewState.IdRef="FlowSwitch`1_1">
              <FlowSwitch.Default>
                <FlowStep x:Name="__ReferenceID6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">463,620</av:Point>
                      <av:Size x:Key="ShapeSize">262,62</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">594,682 594,712 464,712 464,766.666666666667 494,766.666666666667</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign Target Folder" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_12">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[TargetMailFolder]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[in_Config("ProcessedMailFolder").ToString]</InArgument>
                    </Assign.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Assign>
                  <FlowStep.Next>
                    <x:Reference>__ReferenceID0</x:Reference>
                  </FlowStep.Next>
                </FlowStep>
              </FlowSwitch.Default>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">559,483</av:Point>
                  <av:Size x:Key="ShapeSize">70,86.6666666666667</av:Size>
                  <av:PointCollection x:Key="Default">559,526.333333333333 534,526.333333333333 534,590 594,590 594,620</av:PointCollection>
                  <x:String x:Key="DefaultCaseDisplayName">Processed</x:String>
                  <av:PointCollection x:Key="UnclassifiedConnector">629,526.333333333333 651,526.333333333333 651,590 231,590 231,620</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <FlowStep x:Key="Unclassified" x:Name="__ReferenceID7">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">100,620</av:Point>
                    <av:Size x:Key="ShapeSize">262,62</av:Size>
                    <av:PointCollection x:Key="ConnectorLocation">231,682 231,712 724,712 724,766.666666666667 694,766.666666666667</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="Assign Target Folder" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_13">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[TargetMailFolder]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[in_Config("MailSourceFolder").ToString]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <FlowStep.Next>
                  <FlowStep x:Name="__ReferenceID0">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:Point x:Key="ShapeLocation">494,732</av:Point>
                        <av:Size x:Key="ShapeSize">200,69.3333333333333</av:Size>
                        <av:PointCollection x:Key="ConnectorLocation">594,801.333333333333 594,851</av:PointCollection>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="Move Email to Folder" sap:VirtualizedContainerService.HintSize="1206,1943.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_30">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ForEach x:TypeArguments="scg:KeyValuePair(x:String, x:String)" CurrentIndex="{x:Null}" DisplayName="For Each Mailbox" sap:VirtualizedContainerService.HintSize="1164,1851.33333333333" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[in_MailBoxes]">
                        <ui:ForEach.Body>
                          <ActivityAction x:TypeArguments="scg:KeyValuePair(x:String, x:String)">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="scg:KeyValuePair(x:String, x:String)" Name="Mailbox" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Try to Move Email" sap:VirtualizedContainerService.HintSize="1127.33333333333,1712.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_29">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="Mails" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log MailBox" sap:VirtualizedContainerService.HintSize="1085.33333333333,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[&quot;Working in Mailbox:  &quot; + Mailbox.Key]" />
                              <If Condition="[in_MailAddresses.Contains(Mailbox.Key)]" DisplayName="If Mailbox relevant" sap:VirtualizedContainerService.HintSize="1085.33333333333,1424" sap2010:WorkflowViewState.IdRef="If_6">
                                <If.Then>
                                  <Sequence DisplayName="Identify Message and Move" sap:VirtualizedContainerService.HintSize="705.333333333333,1270" sap2010:WorkflowViewState.IdRef="Sequence_28">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:GetIMAPMailMessages TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Get all messages from Processing folder" DeleteMessages="False" DisplayName="Get IMAP Mail Messages" Email="[Mailbox.Key]" EnableSSL="True" sap:VirtualizedContainerService.HintSize="663.333333333333,67.3333333333333" sap2010:WorkflowViewState.IdRef="GetIMAPMailMessages_2" MailFolder="[in_Config(&quot;ProcessingMailFolder&quot;).ToString]" MarkAsRead="False" Messages="[Mails]" OnlyUnreadMessages="False" Password="[Mailbox.Value]" Port="[Cint(in_Config(&quot;Port&quot;).ToString)]" SecureConnection="Auto" Server="[in_Config(&quot;Server&quot;).ToString]" Top="100">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:GetIMAPMailMessages>
                                    <ui:LogMessage DisplayName="Emails Count Log" sap:VirtualizedContainerService.HintSize="663.333333333333,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info" Message="[&quot;Emails Read in from Processing Folder:  &quot; + Mails.Count.ToString]" />
                                    <ui:ForEach x:TypeArguments="snm:MailMessage" CurrentIndex="{x:Null}" DisplayName="For Each Email" sap:VirtualizedContainerService.HintSize="663.333333333333,936" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[Mails]">
                                      <ui:ForEach.Body>
                                        <ActivityAction x:TypeArguments="snm:MailMessage">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="Mail" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Select Message" sap:VirtualizedContainerService.HintSize="626.666666666667,797.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If Condition="[Mail.Headers(&quot;From&quot;).Equals(in_MailFrom) AND Mail.Headers(&quot;Date&quot;).Equals(in_MailDate)]" DisplayName="If Match" sap:VirtualizedContainerService.HintSize="584.666666666667,705.333333333333" sap2010:WorkflowViewState.IdRef="If_5">
                                              <If.Then>
                                                <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="438.666666666667,551.333333333333" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                                                  <TryCatch.Try>
                                                    <Sequence sap:VirtualizedContainerService.HintSize="376,313.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:MoveIMAPMailMessageToFolder DisplayName="Move IMAP Mail Message" Email="[Mailbox.Key]" EnableSSL="True" FromFolder="[in_Config(&quot;ProcessingMailFolder&quot;).ToString]" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="MoveIMAPMailMessageToFolder_3" MailFolder="[TargetMailFolder]" MailMessage="[Mail]" Password="[Mailbox.Value]" Port="[Cint(in_Config(&quot;Port&quot;))]" SecureConnection="Auto" Server="[in_Config(&quot;Server&quot;).ToString]" />
                                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Email Moved to &quot; + TargetMailFolder + &quot;Folder&quot;]" />
                                                    </Sequence>
                                                  </TryCatch.Try>
                                                  <TryCatch.Catches>
                                                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404.666666666667,22" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ActivityAction x:TypeArguments="s:Exception">
                                                        <ActivityAction.Argument>
                                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                        </ActivityAction.Argument>
                                                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Warn" Message="[&quot;Could not Move Email &quot; + Mail.Subject +&quot; in &quot; + Mailbox.Key + vbCr + exception.Message]" />
                                                      </ActivityAction>
                                                    </Catch>
                                                  </TryCatch.Catches>
                                                  <TryCatch.Finally>
                                                    <ui:Break sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Break_3" />
                                                  </TryCatch.Finally>
                                                </TryCatch>
                                              </If.Then>
                                            </If>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ForEach.Body>
                                    </ui:ForEach>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <ui:LogMessage DisplayName="Log Mailbox not Found" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[&quot;No Mail Address: &quot; + in_MailAddresses]" />
                                </If.Else>
                              </If>
                              <ui:Break sap:VirtualizedContainerService.HintSize="1085.33333333333,22" sap2010:WorkflowViewState.IdRef="Break_4" />
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEach.Body>
                      </ui:ForEach>
                    </Sequence>
                    <FlowStep.Next>
                      <FlowStep x:Name="__ReferenceID4">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">494,851</av:Point>
                            <av:Size x:Key="ShapeSize">200,69.3333333333333</av:Size>
                            <av:PointCollection x:Key="ConnectorLocation">594,920.333333333333 594,950.333333333333 595,950.333333333333 595,971</av:PointCollection>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence DisplayName="Save File" sap:VirtualizedContainerService.HintSize="200,69.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_19">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SaveFile to Final Location workflow" sap:VirtualizedContainerService.HintSize="340.666666666667,114" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Components\SaveFile to Final Location.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="in_FilePath">[in_FilePath]</InArgument>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Double)" x:Key="in_DocumentTypes">[DocumentTypes]</InArgument>
                              <OutArgument x:TypeArguments="x:String" x:Key="out_FinalFilePath">[FinalFilePath]</OutArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_FullPathUnresolved">[in_FullPathUnresolved]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_FullPathClassified">[in_FullPathClassified]</InArgument>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_LogText">[in_LogText]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_LogFilePath">[in_LogFilePath]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeWorkflowFile>
                          <Assign sap2010:Annotation.AnnotationText="Changed FilePath assigned as the invoked workflow moved the file to a new location. For logging purpose only." DisplayName="Change FilePath" sap:VirtualizedContainerService.HintSize="340.666666666667,124" sap2010:WorkflowViewState.IdRef="Assign_9">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[FilePath]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[FinalFilePath]</InArgument>
                            </Assign.Value>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Assign>
                        </Sequence>
                        <FlowStep.Next>
                          <FlowStep x:Name="__ReferenceID3">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <av:Point x:Key="ShapeLocation">495,971</av:Point>
                                <av:Size x:Key="ShapeSize">200,52.6666666666667</av:Size>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Add Item to Queue workflow" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Components\Add Item to Queue.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_FinalFilePath">[FinalFilePath]</InArgument>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Double)" x:Key="in_DocumentTypes">[DocumentTypes]</InArgument>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeWorkflowFile>
                          </FlowStep>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowStep.Next>
              </FlowStep>
            </FlowSwitch>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID1</x:Reference>
    <FlowStep x:Name="__ReferenceID8">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">494,125</av:Point>
          <av:Size x:Key="ShapeSize">200,69.3333333333333</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">594,194.333333333333 594,244</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Initialize" sap:VirtualizedContainerService.HintSize="200,69.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_12">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="LocalConfigString" />
          <Variable x:TypeArguments="njl:JObject" Name="LocalConfig" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign sap:VirtualizedContainerService.HintSize="384,62" sap2010:WorkflowViewState.IdRef="Assign_6">
          <Assign.To>
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Double)">[DocumentTypes]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Double)">[new Dictionary(of String, Double)]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap2010:Annotation.AnnotationText="Used only for logging purposes as the files gets moved to another location from in_FilePath during the workflow" DisplayName="Assign FilaPath Variable" sap:VirtualizedContainerService.HintSize="384,124" sap2010:WorkflowViewState.IdRef="Assign_7">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[FilePath]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[in_FilePath]</InArgument>
          </Assign.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Assign>
        <ui:ReadTextFile Content="[LocalConfigString]" DisplayName="Read Config File" FileName="Data\Config.json" sap:VirtualizedContainerService.HintSize="384,80.6666666666667" sap2010:WorkflowViewState.IdRef="ReadTextFile_2" />
        <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="384,62" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_2" JsonObject="[LocalConfig]" JsonString="[LocalConfigString]" />
        <Assign DisplayName="Assign DOM" sap:VirtualizedContainerService.HintSize="384,62" sap2010:WorkflowViewState.IdRef="Assign_10">
          <Assign.To>
            <OutArgument x:TypeArguments="p3:Document">[DOM]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="p3:Document">[Document.Deserialize(in_DOMstring)]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Assign Taxonomy" sap:VirtualizedContainerService.HintSize="384,62" sap2010:WorkflowViewState.IdRef="Assign_11">
          <Assign.To>
            <OutArgument x:TypeArguments="p4:DocumentTaxonomy">[Taxonomy]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="p4:DocumentTaxonomy">[DocumentTaxonomy.Deserialize(in_TaxonomyString)]</InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
      <FlowStep.Next>
        <x:Reference>__ReferenceID2</x:Reference>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
  </Flowchart>
</Activity>